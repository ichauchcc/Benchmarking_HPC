#!/bin/bash

# ExomeAlignment and haplotypecaller
# Need to specify -v sample -v forward -v reverse and -N jobname

# ~~~~~~Set up PBS ~~~~~~~~~~~~~~~~~

# need a project ID from ICT support when applying for access
#PBS -P RDS-SMS-MPSHCM-RW

# give job a name
# PBS -N fastqc

# number of nodes and processors select=1:ncpus=2:mem=2GB is to select 2 processors from the same node with total memeory 2GB 

#PBS -l select=1:ncpus=2:mem=8GB

# set your minimum acceptable walltime=hours:minutes:seconds
#PBS -l walltime=02:00:00

# request queue
#PBS -q defaultQ

# Specify your email address to be notified of progress
#PBS -M y.chang@centenary.org.au

# To receive an email:
#       - job is aborted: 'a' 
#       - job begins execution: 'b'
#       - job terminates: 'e'
#       Note: Please ensure that the PBS -M option above is set.
#PBS -m e


# ~~~~~~~Load modules~~~~~~~~~~~~~~~~

module load fastqc/0.11.8

# ~~~~~~Set variables~~~~~~~~~~~~~~~~

fastqpath=/scratch/WGSHCM/Rawdata

fastqc ${fastqpath}/${forward} ${fastqpath}/${reverse} --threads 2 --outdir ${fastqpath} --noextract

# ~~~~~~~Commands to execute~~~~~~~~~
# submission of fastqc
# ls *1.fastq.gz | cut -d "_" -f1 | awk '{print"echo `qsub -v sample=\""$0"\",forward=\""$0"_R1.fastq.gz\",reverse=\""$0"_R2.fastq.gz\" -N "$0_fqc" fastqc.pbs`"}'

echo `qsub -v sample="ASX1",forward="ASX1_R1.fastq.gz",reverse="ASX1_R2.fastq.gz" -N ASX1 fastqc.pbs`
echo `qsub -v sample="BCV1",forward="BCV1_R1.fastq.gz",reverse="BCV1_R2.fastq.gz" -N BCV1 fastqc.pbs`
echo `qsub -v sample="BQE1",forward="BQE1_R1.fastq.gz",reverse="BQE1_R2.fastq.gz" -N BQE1 fastqc.pbs`
echo `qsub -v sample="BVX1",forward="BVX1_R1.fastq.gz",reverse="BVX1_R2.fastq.gz" -N BVX1 fastqc.pbs`
echo `qsub -v sample="CPN1",forward="CPN1_R1.fastq.gz",reverse="CPN1_R2.fastq.gz" -N CPN1 fastqc.pbs`
echo `qsub -v sample="CUX1",forward="CUX1_R1.fastq.gz",reverse="CUX1_R2.fastq.gz" -N CUX1 fastqc.pbs`
echo `qsub -v sample="CWX1",forward="CWX1_R1.fastq.gz",reverse="CWX1_R2.fastq.gz" -N CWX1 fastqc.pbs`
echo `qsub -v sample="DQK2",forward="DQK2_R1.fastq.gz",reverse="DQK2_R2.fastq.gz" -N DQK2 fastqc.pbs`
echo `qsub -v sample="DUO1",forward="DUO1_R1.fastq.gz",reverse="DUO1_R2.fastq.gz" -N DUO1 fastqc.pbs`
echo `qsub -v sample="DUV1",forward="DUV1_R1.fastq.gz",reverse="DUV1_R2.fastq.gz" -N DUV1 fastqc.pbs`
echo `qsub -v sample="DXO1",forward="DXO1_R1.fastq.gz",reverse="DXO1_R2.fastq.gz" -N DXO1 fastqc.pbs`

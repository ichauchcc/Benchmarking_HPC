#!/bin/bash
# Need to specify -v sample and -N jobname

# ~~~~~~Set up PBS ~~~~~~~~~~~~~~~~~
# need a project ID from ICT support when applying for access
#PBS -P RDS-SMS-WGSHCM-RW

# number of nodes and processors nodes=1:ppn=2 is to select 2 processors from the same node 
#PBS -l ncpus=8

# set your maximum walltime=hours:minutes:seconds
#PBS -l walltime=36:00:00

# request memory
#PBS -l mem=80G  

# Specify your email address to be notified of progress
#PBS -M y.chang@centenary.org.au

# To receive an email:
#       - job is aborted: 'a' 
#       - job begins execution: 'b'
#       - job terminates: 'e'
#       Note: Please ensure that the PBS -M option above is set.
#PBS -m e

# ~~~~~~~Load modules~~~~~~~~~~~~~~~~
module load bwa/0.7.17
module load samtools/1.9

# ~~~~~~Set variables~~~~~~~~~~~~~~~~
ref=/project/CGSP/Refs/Homo_sapiens_assembly38.fasta
output=/scratch/WGSHCM/tempBAMs
fastqpath=/scratch/WGSHCM/Rawdata

echo "start bwa alignment";
echo 'puts [clock format [clock seconds] -format {%Y-%m-%d %T %Z} -timezone ":Australia/Sydney"]' | tclsh
# Usage: bwa mem [options] <idxbase> <in1.fq> [in2.fq]

bwa mem -M -t 8 -R "@RG\tID:${sample}\tSM:${sample}\tPL:ILLUMINA\tLB:${sample}" \
${ref} \
${fastqpath}/${sample}_R1.fastq.gz \
${fastqpath}/${sample}_R2.fastq.gz | \
samtools sort -o ${output}/${sample}.bam

# Index the sorted BAM file
samtools index ${output}/${sample}.bam

# samtools fastq -f 4 ${output}/${sample}.bam > ${output}/${sample}.unmatched.fastq

echo "end bam sort and index";
echo 'puts [clock format [clock seconds] -format {%Y-%m-%d %T %Z} -timezone ":Australia/Sydney"]' | tclsh 


# ~~~~~~~Commands to execute~~~~~~~~~
# cd /scratch/WGSHCM/tempBAMs/
# ls *_R1.fastq.gz | sed 's/_R1.fastq.gz//g' | awk '{print"echo `qsub -v sample=\""$0"\" -N fastq2bam_"$0" Align_paired_humanRef.pbs`"}'
# cd /project/WGSHCM/Scripts/
# echo `qsub -v sample="ASX1" -N fastq2bam_ASX1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="BCV1" -N fastq2bam_BCV1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="BQE1" -N fastq2bam_BQE1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="BVX1" -N fastq2bam_BVX1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="CPN1" -N fastq2bam_CPN1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="CUX1" -N fastq2bam_CUX1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="CWX1" -N fastq2bam_CWX1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="DQK2" -N fastq2bam_DQK2 Align_paired_humanRef.pbs`
# echo `qsub -v sample="DUO1" -N fastq2bam_DUO1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="DUV1" -N fastq2bam_DUV1 Align_paired_humanRef.pbs`
# echo `qsub -v sample="DXO1" -N fastq2bam_DXO1 Align_paired_humanRef.pbs`




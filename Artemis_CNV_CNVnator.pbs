#!/bin/bash

# Use lumpy to find structural variants
# Need to specify  -sample -N jobname
# ~~~~~~Set up PBS ~~~~~~~~~~~~~~~~~

# need a project ID from ICT support when applying for access
#PBS -P RDS-SMS-CGSP-RW

# 'select' number of nodes: and 'ncpus' number of cpus: and memory 
#PBS -l select=1:ncpus=2:mem=48GB

# set your minimum acceptable walltime=hours:minutes:seconds
#PBS -l walltime=12:00:00

# request queue
#PBS -q defaultQ

# Specify your email address to be notified of progress
#PBS -M y.chang@centenary.org.au

# To receive an email:
#       - job is aborted: 'a' 
#       - job begins execution: 'b'
#       - job terminates: 'e'
#       Note: Please ensure that the PBS -M option above is set.
#PBS -m e

# ~~~~~~~Load modules~~~~~~~~~~~~~~~~

module load samtools/1.3.1
module load cnvnator/0.4
module load bedtools/2.29.2

# ~~~~~~Set variables~~~~~~~~~~~~~~~~
path=/project/WGSHCM
bam=/scratch/WGSHCM/tempBAMs
outdir=${path}/CNVnator/${sample}
targets=${path}/Targets
split_reference_genome=/project/CGSP/Refs/

# ~~~~~~~Commands to execute~~~~~~~~~
# 1. make a directory for the results
mkdir -p ${outdir}

# 1. Extract read mapping
echo "start Extract read mapping";

cnvnator -root ${outdir}/${sample}.root -tree ${bam}/${sample}.bam -genome GRCh38 -chrom chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY

echo 'puts [clock format [clock seconds] -format {%Y-%m-%d %T %Z} -timezone ":Australia/Sydney"]' | tclsh
echo "start Generate histogra";

# 2. Generate histogram
cnvnator -root ${outdir}/${sample}.root -d ${split_reference_genome} -his 100 -chrom chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY
# -outroot ${outdir}/${sample}.his.root 

echo 'puts [clock format [clock seconds] -format {%Y-%m-%d %T %Z} -timezone ":Australia/Sydney"]' | tclsh
echo "Calculate statistics";

# 3. Calculate statistics
cnvnator -root ${outdir}/${sample}.root -stat 100

echo 'puts [clock format [clock seconds] -format {%Y-%m-%d %T %Z} -timezone ":Australia/Sydney"]' | tclsh
echo "Partition";

# 4. Partition
cnvnator -root ${outdir}/${sample}.root -partition 100

echo 'puts [clock format [clock seconds] -format {%Y-%m-%d %T %Z} -timezone ":Australia/Sydney"]' | tclsh
echo "Call CNVs";

# 5. Call CNVs
cnvnator -root ${outdir}/${sample}.root -call 100 > ${outdir}/${sample}.cnvnator

echo 'puts [clock format [clock seconds] -format {%Y-%m-%d %T %Z} -timezone ":Australia/Sydney"]' | tclsh
echo "Start CNVnator to VCF";

# 6. Sorting the file using t-test value and q0 
# grep 'deletion'  /project/CGSP/CNVnator/A1933007.cnvnator > /project/CGSP/CNVnator/A1933007_deletion.cnvnator
#sort -n -k5 ${outdir}/${sample}.cnvnator > ${outdir}/${sample}_sort_ttest.cnvnator
cat ${outdir}/${sample}.cnvnator | awk -F"\t" '$9<0.5{print $0}' > ${outdir}/${sample}_selected.cnvnator
cat ${outdir}/${sample}_selected.cnvnator | awk -F"\t" '$3>1000{print $0}' > ${outdir}/${sample}_filter1.cnvnator
cat ${outdir}/${sample}_filter1.cnvnator | awk -F"\t" '/duplication/ {if (($4>1.5)) print $0}' > ${outdir}/${sample}_selected_filter_dup.cnvnator
cat ${outdir}/${sample}_filter1.cnvnator | awk -F"\t" '/deletion/ {print $0}' > ${outdir}/${sample}_selected_filter_del.cnvnator
cat ${outdir}/${sample}_selected_filter_dup.cnvnator ${outdir}/${sample}_selected_filter_del.cnvnator > ${outdir}/${sample}_merge.cnvnator
rm ${outdir}/${sample}_selected.cnvnator ${outdir}/${sample}_filter1.cnvnator ${outdir}/${sample}_selected_filter_dup.cnvnator ${outdir}/${sample}_selected_filter_del.cnvnator

# 7. CNVnator to VCF
cnvnator2VCF.pl -prefix ${sample} -reference GRCh38 ${outdir}/${sample}_merge.cnvnator ${split_reference_genome} > ${outdir}/${sample}.cnvnator.vcf

# 8. intersectBed
bedtools intersect -a ${outdir}/${sample}.cnvnator.vcf -b /project/CGSP/Targets/WholeGene.bed -wa -wb > ${outdir}/${sample}.intersect.vcf

echo "Finish";

# ~~~~~~~execute pbs~~~~~~~~~
echo `qsub -v sample="ASX1" -N cnvnator_ASX1 cnvnator.pbs`
echo `qsub -v sample="BCV1" -N cnvnator_BCV1 cnvnator.pbs`
echo `qsub -v sample="BQE1" -N cnvnator_BQE1 cnvnator.pbs`
echo `qsub -v sample="BVX1" -N cnvnator_BVX1 cnvnator.pbs`
echo `qsub -v sample="CPN1" -N cnvnator_CPN1 cnvnator.pbs`
echo `qsub -v sample="CUX1" -N cnvnator_CUX1 cnvnator.pbs`
echo `qsub -v sample="CWX1" -N cnvnator_CWX1 cnvnator.pbs`
echo `qsub -v sample="DQK2" -N cnvnator_DQK2 cnvnator.pbs`
echo `qsub -v sample="DUO1" -N cnvnator_DUO1 cnvnator.pbs`
echo `qsub -v sample="DUV1" -N cnvnator_DUV1 cnvnator.pbs`
echo `qsub -v sample="DXO1" -N cnvnator_DXO1 cnvnator.pbs`
